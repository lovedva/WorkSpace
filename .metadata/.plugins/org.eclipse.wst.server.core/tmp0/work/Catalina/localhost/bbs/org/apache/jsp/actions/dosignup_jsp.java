/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2016-04-07 16:24:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.actions;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.UserDao;
import model.*;
import model.SigninUserCheck;
import dto.User;
import java.sql.Connection;
import dao.ConnectionFactory;
import java.net.InetAddress;

public final class dosignup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
SigninUserCheck signinusrcheck =new SigninUserCheck();

String username = request.getParameter("username");
String password = request.getParameter("password");
String email =request.getParameter("email");

System.out.println("用户名 ==》 " + username);
System.out.println("密码 ==》 " + password);
System.out.println("Email ==》 " + email);

String path = request.getContextPath();  
InetAddress addr = InetAddress.getLocalHost();
String ip = addr.getHostAddress().toString();
String basePath = request.getScheme()+"://"+"localhost"+":"+request.getServerPort()+path; 

String redirecturl =request.getHeader("Referer");

if (IsEmpty.Checkisempty(username)==true || IsEmpty.Checkisempty(password)==true|| IsEmpty.Checkisempty(email)==true) {
	request.setAttribute("msg", "用户名或密码或email为空");
	request.getRequestDispatcher("/error.jsp").forward(request,response);
} else {
	User user = new User();
	user.setName(username);
	user.setPassword(password);
	user.setEmail(email);
	user.setAvatarurl("img/defaultavatar.jpg");
	System.out.println(user.getAvatarurl());
	boolean bool = signinusrcheck.check(user);

	if (bool) {
		request.setAttribute("msg", "该用户名已存在");	
		System.out.println("用户名已存在" );
		request.getRequestDispatcher("/error.jsp").forward(request,response);
		
	} else {
		Connection conn =  ConnectionFactory.getInstance().makeConnection();
		UserDao userdao=new UserDao();
		userdao.save(conn, user);
		
		UserCheck uc=new UserCheck();
		uc.check();
		long id =uc.getUseridlist().get( uc.getUsernamelist().indexOf(user.getName()));
		user.setId(id);      System.out.println("当前注册完毕后登录用户 UserID= "+user.getId());   
		request.getSession().setAttribute("user", user);
		System.out.println("注册成功" );
		 response.sendRedirect(redirecturl);
		
	}


}


    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
