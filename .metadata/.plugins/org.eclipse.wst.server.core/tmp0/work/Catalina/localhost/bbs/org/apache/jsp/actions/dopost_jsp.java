/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2016-04-07 16:25:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.actions;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import dao.TopicDao;
import model.*;
import dto.*;
import java.sql.Connection;
import dao.ConnectionFactory;

public final class dopost_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
User user = (User) request.getSession().getAttribute("user");
int boardpagenum =Integer.parseInt( request.getParameter("boardpagenum")); //板块帖子页码
if (user != null) {

   String topictitle =new String( request.getParameter("topictitle").getBytes("iso-8859-1"),"utf-8");
   String topicbody = new String( request.getParameter("topicbody").getBytes("iso-8859-1"),"utf-8");
   String s =request.getParameter("topicuid");
   long topicuid=Long.parseLong(s);
   System.out.println("dopost获取topicuid "+topicuid);
   System.out.println("dopost获取topicbody "+topicbody);
   System.out.println("dopost获取topictitle "+topictitle); 
   
   
   Topic topic =new Topic();
   if (IsEmpty.Checkisempty(topictitle)==true|| IsEmpty.Checkisempty(topicbody )==true || s==null) {
		request.setAttribute("msg", "标题或者内容为空");
		request.getRequestDispatcher("/error.jsp").forward(request,response);
	} else {
		
		
		topic.setTitle(topictitle);
		topic.setBody(topicbody);
		topic.setUid(topicuid);
		topic.setReplyCount(0);
		topic.setBid(1);
		
		 Connection conn =  ConnectionFactory.getInstance().makeConnection();
		 TopicDao topicdao=new TopicDao();
		 topicdao.save(conn, topic);
		 if(topicdao.getPrimarykeysave().next()){  
     	    System.out.println("获取插入数据库获取的主键（ID）值： "+topicdao.getPrimarykeysave().getInt(1));  
     	   int thistopicid=topicdao.getPrimarykeysave().getInt(1);
     	  System.out.println("获取新帖ID"+thistopicid);
     	 System.out.println("帖子发表成功");
		 response.sendRedirect("/bbs/topicpage.jsp?tid="+thistopicid+"&pn="+boardpagenum);
     	    }  
		 
		

	}
   
}else{
	System.out.println("dopost检测到未登录  ");
request.setAttribute("msg", "请先登录");	
System.out.println("用户未登录" );
request.getRequestDispatcher("/error.jsp").forward(request,response);
} 
    











    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
